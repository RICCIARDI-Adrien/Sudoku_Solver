BINARIES_PATH = Binaries
INCLUDES_PATH = Includes
SOLVER_INCLUDES_PATH = $(INCLUDES_PATH)/Solver
OBJECTS_PATH = Objects
SOURCES_PATH = Sources
SOLVER_SOURCES_PATH = $(SOURCES_PATH)/Solver
CONVERTER_SOURCES_PATH = $(SOURCES_PATH)/Converter

SOLVER_OBJECTS = $(OBJECTS_PATH)/Cells_Stack.o $(OBJECTS_PATH)/Grid.o $(OBJECTS_PATH)/Main.o
CONVERTER_OBJECTS = $(OBJECTS_PATH)/Converter.o

CC = gcc
CCFLAGS = -W -Wall -I$(SOLVER_INCLUDES_PATH)

release: CCFLAGS += -O3 -Wl,--strip-all
release: all

debug: CCFLAGS += -DDEBUG -g
debug: all

all: $(SOLVER_OBJECTS) $(CONVERTER_OBJECTS)
	$(CC) $(CCFLAGS) $(SOLVER_OBJECTS) -o $(BINARIES_PATH)/Sudoku_Solver
	$(CC) $(CCFLAGS) $(CONVERTER_OBJECTS) -o $(BINARIES_PATH)/Converter

$(OBJECTS_PATH)/Cells_Stack.o: $(SOLVER_SOURCES_PATH)/Cells_Stack.c $(SOLVER_INCLUDES_PATH)/Cells_Stack.h $(SOLVER_INCLUDES_PATH)/Configuration.h
	$(CC) $(CCFLAGS) -c $(SOLVER_SOURCES_PATH)/Cells_Stack.c -o $(OBJECTS_PATH)/Cells_Stack.o

$(OBJECTS_PATH)/Grid.o: $(SOLVER_SOURCES_PATH)/Grid.c $(SOLVER_INCLUDES_PATH)/Cells_Stack.h $(SOLVER_INCLUDES_PATH)/Configuration.h $(SOLVER_INCLUDES_PATH)/Grid.h
	$(CC) $(CCFLAGS) -c $(SOLVER_SOURCES_PATH)/Grid.c -o $(OBJECTS_PATH)/Grid.o

$(OBJECTS_PATH)/Main.o: $(SOLVER_SOURCES_PATH)/Main.c $(SOLVER_INCLUDES_PATH)/Configuration.h $(SOLVER_INCLUDES_PATH)/Grid.h
	$(CC) $(CCFLAGS) -c $(SOLVER_SOURCES_PATH)/Main.c -o $(OBJECTS_PATH)/Main.o

$(OBJECTS_PATH)/Converter.o: $(CONVERTER_SOURCES_PATH)/Converter.c
	$(CC) $(CCFLAGS) -c $(CONVERTER_SOURCES_PATH)/Converter.c -o $(OBJECTS_PATH)/Converter.o

clean:
	rm -f $(SOLVER_OBJECTS) $(CONVERTER_OBJECTS) $(BINARIES_PATH)/*
